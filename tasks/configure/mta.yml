---
#
# Configuring SpamAssassin
################################################################################
- name: Downloading and Installing Kevin McGrail's Custom Rules
  get_url:
    url: https://www.pccc.com/downloads/SpamAssassin/contrib/KAM.cf
    dest: "{{ zimbra_home }}/data/spamassassin/localrules/sakam.cf"
    mode: 0440
    owner: "{{ zimbra_user }}"
    group: "{{ zimbra_group }}"

- name: Configuring sauser.cf With new Scores
  copy:
    src: sauser.cf
    dest: "{{ zimbra_home }}/data/spamassassin/localrules/sauser.cf"
    owner: root
    group: root
    mode: 0440
    
- name: Enabling SpamAssassin and Amavis configs
  command: "./zmlocalconfig -e antispam_enable_{{ item }}=true"
  args:
    chdir: "{{ zimbra_bin }}"
  with_items:
    - rule_updates
    - restart
    - rule_compilation
  become: yes
  become_user: "{{ zimbra_user }}"

#
# Configuring Pyzor
################################################################################
- name: Downloading and Configuring Pyzor's Anti-spam Base
  command: "pyzor --homedir {{ zimbra_home }}/data/amavisd/.pyzor discover"
  become: yes
  become_user: "{{ zimbra_user }}"

#
# Configuring Razor
################################################################################
- name: Configuring Razor's Anti-spam Base
  command: "razor-admin -home={{ zimbra_home }}/data/amavisd/.razor -{{ item }}"
  with_items:
    - create
    - discover
    - register
  become: yes
  become_user: "{{ zimbra_user }}"

#
# Configuring PolicyD
################################################################################
- name: Configuring PolicyD Database
  template:
    src: 'config.php'
    dest: "{{ zimbra_home }}/common/share/webui/includes/config.php"
    owner: root
    group: root
    mode: 0644
  when: zimbra_policyd == 'y'

- name: Configuring PolicyD Web Interface
  file:
    src: "{{ zimbra_home }}/common/share/webui"
    dest: "{{ zimbra_home }}/data/httpd/htdocs/webui"
    state: link
  when: zimbra_policyd == 'y'

- name: Enable PolicyD Web Interface
  lineinfile:
    dest: "{{ zimbra_home }}/conf/httpd.conf"
    regexp: "^    DirectoryIndex index.html index.html.var"
    line: "    DirectoryIndex index.html index.html.var index.php"
    state: present
  when: zimbra_policyd == 'y'
